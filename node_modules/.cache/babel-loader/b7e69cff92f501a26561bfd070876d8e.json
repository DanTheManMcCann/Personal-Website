{"ast":null,"code":"var _jsxFileName = \"/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport NavigationBar from \"./components/navigationbar\";\nimport HomePage from \"./Sections/Homepage\";\nimport ButtonTrigger from \"./components/ButtonTrigger\";\nimport Test from \"./components/test\";\nimport React from \"react\";\nimport ScrollCircle from \"./components/ScrollCircle\"; //add import statements above this - it doesn't autocorrect below for SOME WEIRD REASON!!!!!!\n\nimport CurrentProjects from \"./Sections/CurrentProjects\";\nimport GuessingGame from \"./Sections/GuessingGame\"; //bruh\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nwindow.onbeforeunload = function () {\n  //IMPORTANT - ON REFRESH IT MOVES THE PAGE TO THE TOP\n  window.scrollTo(0, 0);\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.smallScroll = this.smallScroll.bind(this);\n    this.state = {\n      yPos: 0,\n      scrollLock: true,\n      scrollPos: 0\n    };\n  }\n\n  authenticate() {\n    //used for loading screen - loading screen makes it seem cooler lol\n    return new Promise(resolve => setTimeout(resolve, 2000)); // 1 seconds\n  }\n\n  handleResize() {\n    console.log('resized to: ', window.innerWidth, 'x', window.innerHeight);\n  }\n\n  componentDidMount() {\n    //Delete loading page\n    this.authenticate().then(() => {\n      const ele = document.getElementById('loading-screen');\n\n      if (ele) {\n        ele.outerHTML = '';\n      }\n    });\n    window.addEventListener(\"scroll\", this.handleScroll);\n    document.addEventListener(\"wheel\", this.smallScroll); // window.addEventListener('resize', this.handleResize) used if i want to load screen on resize\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n    document.addEventListener(\"wheel\", this.smallScroll);\n  }\n\n  smallScroll(event) {\n    this.setState({\n      scrollPos: event\n    });\n\n    if (event.deltaY > 10) {\n      // console.log(\"scroll:)\")\n      this.setState({\n        scrollLock: false\n      }); // console.log(\"Scroll lock: \" + this.state.scrollLock)\n    }\n  }\n\n  handleScroll() {\n    this.setState({\n      yPos: window.scrollY\n    });\n    console.log(this.state.yPos); // console.log(window.innerWidth);\n    // console.log(window.innerHeight);  \n    //use this to find the height of the screen showing it - use this for page calculations\n    //homepage is set to full height, so the innerheight.\n\n    /*this doesn't update for some reason, but I can still use it and assume no updates*/\n  }\n\n  handleClick() {\n    console.log(\"hey\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n        height: this.state.yPos < 300 ? this.state.yPos / 4 : 75 + \"px\",\n        display: this.state.yPos < 300 || window.innerWidth < 600 ? 'none' : 'block',\n        displayName: this.state.yPos < 300 ? 'none' : 'block'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(HomePage, {\n        lockScroll:\n        /*this.state.scrollLock*/\n        false,\n        onClick: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CurrentProjects, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GuessingGame, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/src/App.js"],"names":["NavigationBar","HomePage","ButtonTrigger","Test","React","ScrollCircle","CurrentProjects","GuessingGame","window","onbeforeunload","scrollTo","App","Component","constructor","props","handleClick","bind","handleScroll","smallScroll","state","yPos","scrollLock","scrollPos","authenticate","Promise","resolve","setTimeout","handleResize","console","log","innerWidth","innerHeight","componentDidMount","then","ele","document","getElementById","outerHTML","addEventListener","componentWillUnmount","removeEventListener","event","setState","deltaY","scrollY","render"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport NavigationBar from \"./components/navigationbar\";\nimport HomePage from \"./Sections/Homepage\";\nimport ButtonTrigger from \"./components/ButtonTrigger\";\nimport Test from \"./components/test\";\nimport React from \"react\";\nimport ScrollCircle from \"./components/ScrollCircle\";\n\n\n//add import statements above this - it doesn't autocorrect below for SOME WEIRD REASON!!!!!!\nimport CurrentProjects from \"./Sections/CurrentProjects\";\nimport GuessingGame from \"./Sections/GuessingGame\";\n\n//bruh\n\nwindow.onbeforeunload = function () { //IMPORTANT - ON REFRESH IT MOVES THE PAGE TO THE TOP\n  window.scrollTo(0, 0);\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.smallScroll = this.smallScroll.bind(this);\n    this.state = { yPos: 0, scrollLock:true, scrollPos:0 };\n  }\n\n  authenticate(){ //used for loading screen - loading screen makes it seem cooler lol\n    return new Promise(resolve => setTimeout(resolve, 2000)) // 1 seconds\n  }\n\n  handleResize(){\n    console.log('resized to: ', window.innerWidth, 'x', window.innerHeight);\n  }\n\n  componentDidMount() {\n    //Delete loading page\n\n    this.authenticate().then(() => {\n      const ele = document.getElementById('loading-screen');\n      if(ele){\n        ele.outerHTML='';\n      }\n    });\n\n    window.addEventListener(\"scroll\", this.handleScroll);\n    document.addEventListener(\"wheel\", this.smallScroll);\n\n    // window.addEventListener('resize', this.handleResize) used if i want to load screen on resize\n    \n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n    document.addEventListener(\"wheel\", this.smallScroll);\n  }\n\n  smallScroll(event){\n    this.setState({scrollPos: event})\n    if (event.deltaY >10){\n      // console.log(\"scroll:)\")\n      this.setState({scrollLock:false});\n      // console.log(\"Scroll lock: \" + this.state.scrollLock)\n    }\n  }\n\n  handleScroll() {\n    this.setState({ yPos: window.scrollY });\n    console.log(this.state.yPos);\n    // console.log(window.innerWidth);\n    // console.log(window.innerHeight);  \n      //use this to find the height of the screen showing it - use this for page calculations\n      //homepage is set to full height, so the innerheight.\n    \n      /*this doesn't update for some reason, but I can still use it and assume no updates*/\n      \n    \n  }\n\n  handleClick() {\n    console.log(\"hey\");\n  }\n  render() {\n    return (\n      <div /*style={{overflow:\"hidden\" }}/*this gets rid of navbar.. */> \n        <NavigationBar \n        height={this.state.yPos<300?this.state.yPos/4:75 +\"px\"}\n        display={(this.state.yPos<300 || window.innerWidth<600)?'none':'block'}\n        displayName={this.state.yPos<300?'none':'block'}\n        ></NavigationBar> {/*Set nav height to increase as it scrolls down*/}\n        {/* <ScrollCircle></ScrollCircle>  This will be used for the scrollable navigation on ios*/}\n        <HomePage lockScroll= {/*this.state.scrollLock*/false} onClick={this.handleClick}></HomePage>\n        <CurrentProjects></CurrentProjects>\n        <GuessingGame></GuessingGame>\n        \n        \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}