{"ast":null,"code":"var _jsxFileName = \"/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/personal-website/src/Sections/GuessingGame.js\";\nimport React from \"react\";\nimport qBank from \"../assets/questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GuessingGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionBank: qBank,\n      scoreArray: ['', ''],\n      //Initialized as empty, will take a score\n      currentQuestion: 0,\n      score: 0\n    };\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.prevQuestion = this.prevQuestion.bind(this);\n    this.calculateScore = this.calculateScore.bind(this);\n  }\n\n  nextQuestion() {\n    if (this.state.currentQuestion < 9) this.setState({\n      currentQuestion: this.state.currentQuestion + 1\n    });\n    this.setState({\n      scoreArray: this.state.scoreArray.splice(this.state.currentQuestion, this.state.currentQuestion, 1)\n    });\n    console.log(this.state.scoreArray.splice(0, 0, 1));\n  }\n\n  prevQuestion() {\n    if (this.state.currentQuestion > 0) this.setState({\n      currentQuestion: this.state.currentQuestion - 1\n    });\n  }\n\n  calculateScore() {\n    let counter = 0;\n\n    for (let elem of this.state.scoreArray) {\n      if (elem == 1) {\n        counter++;\n      }\n    }\n\n    console.log(counter);\n    this.setState({\n      score: counter\n    });\n    console.log(this.state.scoreArray);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Question \", this.state.currentQuestion + 1, \" / \", this.state.questionBank.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.questionBank[this.state.currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.questionBank[this.state.currentQuestion].answers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.prevQuestion,\n        children: \" Previous \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.nextQuestion,\n        children: \" Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Score: \", this.state.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.calculateScore,\n        children: \" Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default GuessingGame;","map":{"version":3,"sources":["/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/personal-website/src/Sections/GuessingGame.js"],"names":["React","qBank","GuessingGame","Component","constructor","props","state","questionBank","scoreArray","currentQuestion","score","nextQuestion","bind","prevQuestion","calculateScore","setState","splice","console","log","counter","elem","render","length","question","answers"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport qBank from \"../assets/questions\";\n\nclass GuessingGame extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            questionBank: qBank,\n            scoreArray: ['',''], //Initialized as empty, will take a score\n            currentQuestion:0,\n            score:0,\n        }\n        this.nextQuestion = this.nextQuestion.bind(this);\n        this.prevQuestion = this.prevQuestion.bind(this);\n        this.calculateScore = this.calculateScore.bind(this);\n    }\n\n    nextQuestion(){\n        if (this.state.currentQuestion < 9)\n            this.setState({currentQuestion: this.state.currentQuestion+1});\n        this.setState({scoreArray: this.state.scoreArray.splice(this.state.currentQuestion, this.state.currentQuestion, 1)})\n        console.log(this.state.scoreArray.splice(0, 0, 1))\n    }\n\n    prevQuestion(){\n        if (this.state.currentQuestion > 0)\n            this.setState({currentQuestion: this.state.currentQuestion-1});\n    }\n\n    calculateScore(){\n        let counter=0;\n        for (let elem of this.state.scoreArray){\n            if (elem ==1){\n                counter++;\n            }\n        }\n        console.log(counter);\n        this.setState({score: counter});\n        console.log(this.state.scoreArray);\n    }\n\n    render(){\n    return (\n        <div>\n        <div>Question {this.state.currentQuestion + 1} / {this.state.questionBank.length}</div>\n        <div>{this.state.questionBank[this.state.currentQuestion].question}</div>\n        <div>{this.state.questionBank[this.state.currentQuestion].answers}</div>\n        <button onClick= {this.prevQuestion}> Previous </button>\n        <button onClick = {this.nextQuestion}> Next</button>\n        <div>Score: {this.state.score}</div>\n        <button onClick={this.calculateScore}> Calculate</button>\n        </div>\n    );\n    }\n}\n\nexport default GuessingGame;"]},"metadata":{},"sourceType":"module"}