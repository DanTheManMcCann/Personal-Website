{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import qBank from\"../assets/questions\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var emptyarr=['','','','','','','','','',''];//hacked together - otherwise array behaves weirdly\nvar GuessingGame=/*#__PURE__*/function(_React$Component){_inherits(GuessingGame,_React$Component);var _super=_createSuper(GuessingGame);function GuessingGame(props){var _this;_classCallCheck(this,GuessingGame);_this=_super.call(this,props);_this.state={questionBank:qBank,scoreArray:emptyarr,//Initialized as empty, will take a score\ncurrentQuestion:0,score:0,selectedAnswer:emptyarr,quizFinished:0};_this.nextQuestion=_this.nextQuestion.bind(_assertThisInitialized(_this));_this.prevQuestion=_this.prevQuestion.bind(_assertThisInitialized(_this));_this.calculateScore=_this.calculateScore.bind(_assertThisInitialized(_this));_this.handleChoice=_this.handleChoice.bind(_assertThisInitialized(_this));_this.resetGame=_this.resetGame.bind(_assertThisInitialized(_this));return _this;}_createClass(GuessingGame,[{key:\"nextQuestion\",value:function nextQuestion(){console.log(this.state.scoreArray);if(this.state.selectedAnswer[this.state.currentQuestion]=='')//make sure user selected answer\nreturn;if(this.state.currentQuestion>8)//if it's last question next shouldn't work.\nreturn;this.setState(function(state){var scoreArray=state.scoreArray.map(function(item,j){if(j===state.currentQuestion){if(state.questionBank[state.currentQuestion].correct==state.selectedAnswer[state.currentQuestion])return 1;//here I want to see if they got it right\nelse return 0;}else{console.log(\"test2\");return item;}});console.log(scoreArray);return{scoreArray:scoreArray};});//testfor correct or false\nconsole.log(this.state.scoreArray);//increment count here\nthis.setState({currentQuestion:this.state.currentQuestion+1});}},{key:\"prevQuestion\",value:function prevQuestion(){if(this.state.currentQuestion>0)this.setState({currentQuestion:this.state.currentQuestion-1});}},{key:\"calculateScore\",value:function calculateScore(){//going into this function they have to be on the last question\nif(this.state.selectedAnswer[9]=='')return;//at this point we know they answered something\nvar counter=0;var _iterator=_createForOfIteratorHelper(this.state.scoreArray),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var elem=_step.value;if(elem==1){counter++;}}//can use simple logic to test to see if their last element is right\n}catch(err){_iterator.e(err);}finally{_iterator.f();}if(this.state.selectedAnswer[9]==this.state.questionBank[9].correct)counter++;//increment counter - they got last one right\nconsole.log(counter);this.setState({score:counter,quizFinished:1});console.log(this.state.scoreArray);}},{key:\"handleChoice\",value:function handleChoice(event){console.log(event.target.getAttribute(\"value\"));//have to use get attribute instead of just target.value here.\nthis.setState(function(state){var selectedAnswer=state.selectedAnswer.map(function(item,j){if(j===state.currentQuestion){return event.target.getAttribute(\"value\");}else{return item;}});return{selectedAnswer:selectedAnswer};});console.log(this.state.selectedAnswer);}},{key:\"resetGame\",value:function resetGame(){this.setState(//just copy and paste original state\n{questionBank:qBank,scoreArray:emptyarr,//Initialized as empty, will take a score\ncurrentQuestion:0,score:0,selectedAnswer:emptyarr,quizFinished:0});}},{key:\"render\",value:function render(){var _this2=this;var map1=this.state.questionBank[this.state.currentQuestion].answers.map(function(item,j){return/*#__PURE__*/_jsxs(\"button\",{value:item,onClick:_this2.handleChoice,className:item==_this2.state.selectedAnswer[_this2.state.currentQuestion]?'mx-2 border-green-500 border-2 p-2 rounded-md cursor-pointer':' mx-2 border-red-500 border-2 p-2 rounded-md cursor-pointer',children:[\" hello \",item,\" \"]},item);});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center m-4 font-size-lg font-bold\",children:\"About Me\"}),/*#__PURE__*/_jsx(\"p\",{className:\"m-4 text-center\",children:\" About Me sections are normally boring, so I made mine an interactive quiz\"}),!this.state.quizFinished?/*#__PURE__*/_jsxs(\"div\",{className:\"mx-4 my-10 bg-gray-200 rounded-lg shadow-xl p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Question \",this.state.currentQuestion+1,\" / \",this.state.questionBank.length]}),/*#__PURE__*/_jsx(\"div\",{children:this.state.questionBank[this.state.currentQuestion].question}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-row justify-start flex-nowrap\",children:map1}),/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:this.prevQuestion,className:this.state.currentQuestion==0?\"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-l opacity-50 cursor-not-allowed\":\"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-l\",children:\" Previous \"}),/*#__PURE__*/_jsx(\"button\",{onClick:this.nextQuestion,className:this.state.selectedAnswer[this.state.currentQuestion]==''||this.state.currentQuestion==9?\"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r opacity-50 cursor-not-allowed\":\"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r\",children:\" Next\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Score: \",this.state.score]}),this.state.currentQuestion==9&&/*#__PURE__*/_jsx(\"button\",{onClick:this.calculateScore,children:\" Calculate\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[\" Your Score: \",this.state.score]}),/*#__PURE__*/_jsx(\"button\",{onClick:this.resetGame,children:\"Play Again\"})]})]});}}]);return GuessingGame;}(React.Component);export default GuessingGame;","map":{"version":3,"sources":["/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/src/Sections/GuessingGame.js"],"names":["React","qBank","emptyarr","GuessingGame","props","state","questionBank","scoreArray","currentQuestion","score","selectedAnswer","quizFinished","nextQuestion","bind","prevQuestion","calculateScore","handleChoice","resetGame","console","log","setState","map","item","j","correct","counter","elem","event","target","getAttribute","map1","answers","length","question","Component"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport qBank from \"../assets/questions\";\n\nconst emptyarr = ['','','','','','','','','','',]; //hacked together - otherwise array behaves weirdly\n\nclass GuessingGame extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            questionBank: qBank,\n            scoreArray: emptyarr, //Initialized as empty, will take a score\n            currentQuestion:0,\n            score:0,\n            selectedAnswer: emptyarr,\n            quizFinished:0,\n        }\n        this.nextQuestion = this.nextQuestion.bind(this);\n        this.prevQuestion = this.prevQuestion.bind(this);\n        this.calculateScore = this.calculateScore.bind(this);\n        this.handleChoice = this.handleChoice.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n    }\n\n    nextQuestion(){\n        console.log(this.state.scoreArray);\n        if (this.state.selectedAnswer[this.state.currentQuestion] =='') //make sure user selected answer\n            return;\n        if (this.state.currentQuestion > 8) //if it's last question next shouldn't work.\n            return;\n        this.setState((state)=>{\n            const scoreArray = state.scoreArray.map((item, j) =>{\n                if (j===state.currentQuestion){\n                    if (state.questionBank[state.currentQuestion].correct == state.selectedAnswer[state.currentQuestion])\n                        return 1; //here I want to see if they got it right\n                    else   \n                        return 0;\n                }else{\n                    console.log(\"test2\");\n                    return item;\n                }\n                });\n                console.log(scoreArray)\n                return {scoreArray: scoreArray};\n            });\n         //testfor correct or false\n        console.log(this.state.scoreArray);\n        //increment count here\n        this.setState({currentQuestion: this.state.currentQuestion+1});\n    }\n\n    prevQuestion(){\n        if (this.state.currentQuestion > 0)\n            this.setState({currentQuestion: this.state.currentQuestion-1});\n    }\n\n    calculateScore(){ //going into this function they have to be on the last question\n        if (this.state.selectedAnswer[9]== '')\n            return;\n\n        //at this point we know they answered something\n        \n\n        let counter=0;\n        for (let elem of this.state.scoreArray){\n            if (elem ==1){\n                counter++;\n            }\n        }\n        //can use simple logic to test to see if their last element is right\n        if (this.state.selectedAnswer[9] == this.state.questionBank[9].correct)\n            counter++; //increment counter - they got last one right\n        \n        console.log(counter);\n        this.setState({score: counter, quizFinished:1});\n        console.log(this.state.scoreArray);\n    }\n\n    handleChoice(event){\n\n        console.log(event.target.getAttribute(\"value\")); //have to use get attribute instead of just target.value here.\n        this.setState((state)=>{\n            const selectedAnswer = state.selectedAnswer.map((item, j) =>{\n                if (j===state.currentQuestion){\n                    return event.target.getAttribute(\"value\");\n                }else{\n                    return item;\n                }\n                });\n                return {selectedAnswer: selectedAnswer};\n            });\n            console.log(this.state.selectedAnswer)\n\n    }\n\n    resetGame(){\n        this.setState(//just copy and paste original state\n           {\n                questionBank: qBank,\n                scoreArray: emptyarr, //Initialized as empty, will take a score\n                currentQuestion:0,\n                score:0,\n                selectedAnswer: emptyarr,\n                quizFinished:0,\n            }\n        )\n    }\n\n    render(){\n        const map1 = this.state.questionBank[this.state.currentQuestion].answers.map((item,j)=>{\n            return <button key={item} value={item} onClick={this.handleChoice} className={item==this.state.selectedAnswer[this.state.currentQuestion]?'mx-2 border-green-500 border-2 p-2 rounded-md cursor-pointer':' mx-2 border-red-500 border-2 p-2 rounded-md cursor-pointer'}> hello {item} </button>\n        });\n\n            \n    return (\n\n        \n        <div>\n        <h1 className=\"text-center m-4 font-size-lg font-bold\">About Me</h1>\n        <p className=\"m-4 text-center\"> About Me sections are normally boring, so I made mine an interactive quiz</p>\n        {!this.state.quizFinished\n            ?<div className=\"mx-4 my-10 bg-gray-200 rounded-lg shadow-xl p-4\">\n            <div>Question {this.state.currentQuestion + 1} / {this.state.questionBank.length}</div>\n            <div>{this.state.questionBank[this.state.currentQuestion].question}</div>\n            <div className=\"flex flex-row justify-start flex-nowrap\">{map1}</div>\n            <div className=\"inline-flex\">\n                <button onClick= {this.prevQuestion} className={ (this.state.currentQuestion == 0)? \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-l opacity-50 cursor-not-allowed\":\"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-l\"}> Previous </button>\n                <button onClick = {this.nextQuestion} className={(this.state.selectedAnswer[this.state.currentQuestion] == '' || this.state.currentQuestion==9)?\"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r opacity-50 cursor-not-allowed\":\"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r\"}> Next</button>\n            </div>\n            <div>Score: {this.state.score}</div>\n            {this.state.currentQuestion==9 && <button onClick={this.calculateScore}> Calculate</button>}\n            </div>\n            : <>\n            <div> Your Score: {this.state.score}</div>\n            <button onClick={this.resetGame}>Play Again</button>\n            </>\n            \n            }\n        </div>\n\n    );\n    }\n}\n\nexport default GuessingGame;"]},"metadata":{},"sourceType":"module"}