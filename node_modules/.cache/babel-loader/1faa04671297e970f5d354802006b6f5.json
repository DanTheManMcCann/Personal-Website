{"ast":null,"code":"var _jsxFileName = \"/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/src/components/ProjectComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./projectStyleSheet.css\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProjectComponent(props) {\n  _s();\n\n  const [clicked, setClicked] = React.useState(0); //add a state hook here that says if its mobile or not. On the small screen I want to display less words in general, and pass the modal a shorter/abbreviated version.\n\n  const scrollRef = React.useRef('');\n\n  const closeModal = () => {\n    setClicked(0);\n    console.log(\"yay\");\n    console.log(clicked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scrollRef,\n    id: \"shadow1\",\n    className: \" p-6 text-white w-10/12 sm:w-96 rounded-lg my-5 mx-10 divide-y-2 cursor-pointer\" //custom css cause tailwind can't do it\n    ,\n    style: {\n      backgroundColor: \"#464141\"\n    },\n    onClick: event => {\n      // scrollRef.current.scrollIntoView(true); //true scrolls it to top \n      if (!clicked) //Test if clicked is active, if not set it active.\n        setClicked(1); //if it was 0 it's now 1. On 1 we want it to scroll to top\n      // console.log(scrollRef.current.getBoundingClientRect())\n      // // window.scrollTo({top: scrollRef.current.offsetTop(), behavior: 'smooth'})\n    } //add a second box shadow in with a unique color lol\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl m-1 text-center\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pt-2\",\n      children: [props.text.substring(0, 179), \".. [View More]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), Boolean(clicked) && /*#__PURE__*/_jsxDEV(Modal, {\n      title: props.title,\n      text: props.text,\n      closeModal: closeModal,\n      links: props.links\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 11\n  }, this);\n}\n\n_s(ProjectComponent, \"KiIafG1UJqt1/+bjLhFRSE5CryQ=\");\n\n_c = ProjectComponent;\nexport default ProjectComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectComponent\");","map":{"version":3,"sources":["/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/src/components/ProjectComponent.js"],"names":["React","Modal","ProjectComponent","props","clicked","setClicked","useState","scrollRef","useRef","closeModal","console","log","backgroundColor","event","title","text","substring","Boolean","links"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAgC;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,KAAK,CAACM,QAAN,CAAe,CAAf,CAA9B,CAD4B,CAE5B;;AAEA,QAAMC,SAAS,GAAGP,KAAK,CAACQ,MAAN,CAAa,EAAb,CAAlB;;AAEA,QAAMC,UAAU,GAAG,MAAI;AACrBJ,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACD,GAJD;;AAMA,sBAEM;AACE,IAAA,GAAG,EAAEG,SADP;AAEE,IAAA,EAAE,EAAG,SAFP;AAGE,IAAA,SAAS,EAAC,iFAHZ,CAIE;AAJF;AAKE,IAAA,KAAK,EAAE;AAACK,MAAAA,eAAe,EAAC;AAAjB,KALT;AAME,IAAA,OAAO,EAAGC,KAAD,IAAS;AACV;AACA,UAAI,CAACT,OAAL,EAAc;AACZC,QAAAA,UAAU,CAAC,CAAD,CAAV,CAHQ,CAGO;AACjB;AACA;AAEH,KAbP,CAeE;AAfF;AAAA,4BAiBE;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA,gBAAyCF,KAAK,CAACW;AAA/C;AAAA;AAAA;AAAA;AAAA,YAjBF,eAkBE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,iBAAqBX,KAAK,CAACY,IAAN,CAAWC,SAAX,CAAqB,CAArB,EAAwB,GAAxB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,EAoBFC,OAAO,CAACb,OAAD,CAAP,iBACA,QAAC,KAAD;AAAO,MAAA,KAAK,EAAED,KAAK,CAACW,KAApB;AAA2B,MAAA,IAAI,EAAEX,KAAK,CAACY,IAAvC;AAA6C,MAAA,UAAU,EAAEN,UAAzD;AAAqE,MAAA,KAAK,EAAEN,KAAK,CAACe;AAAlF;AAAA;AAAA;AAAA;AAAA,YArBE;AAAA;AAAA;AAAA;AAAA;AAAA,UAFN;AA6BH;;GAzCQhB,gB;;KAAAA,gB;AA2CT,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport \"./projectStyleSheet.css\"\nimport Modal from \"./Modal\";\n\nfunction ProjectComponent(props){\n    const [clicked, setClicked] = React.useState(0);\n    //add a state hook here that says if its mobile or not. On the small screen I want to display less words in general, and pass the modal a shorter/abbreviated version.\n\n    const scrollRef = React.useRef('');\n\n    const closeModal = ()=>{ \n      setClicked(0);\n      console.log(\"yay\");\n      console.log(clicked);\n    }\n\n    return(\n        \n          <div \n            ref={scrollRef}\n            id = \"shadow1\" \n            className=\" p-6 text-white w-10/12 sm:w-96 rounded-lg my-5 mx-10 divide-y-2 cursor-pointer\"\n            //custom css cause tailwind can't do it\n            style={{backgroundColor:\"#464141\" }}\n            onClick={(event)=>{\n                    // scrollRef.current.scrollIntoView(true); //true scrolls it to top \n                    if (!clicked) //Test if clicked is active, if not set it active.\n                      setClicked(1); //if it was 0 it's now 1. On 1 we want it to scroll to top\n                    // console.log(scrollRef.current.getBoundingClientRect())\n                    // // window.scrollTo({top: scrollRef.current.offsetTop(), behavior: 'smooth'})\n                        \n                }\n                }\n            //add a second box shadow in with a unique color lol\n          >\n            <h1 className=\"text-xl m-1 text-center\">{props.title}</h1>\n            <p className=\"pt-2\">{props.text.substring(0, 179)}.. [View More]</p>\n            {\n        Boolean(clicked) &&\n        <Modal title={props.title} text={props.text} closeModal={closeModal} links={props.links}></Modal>\n        }\n    \n          </div>\n       \n    );\n}\n\nexport default ProjectComponent;"]},"metadata":{},"sourceType":"module"}