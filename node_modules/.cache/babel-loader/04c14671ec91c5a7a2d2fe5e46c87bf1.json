{"ast":null,"code":"import _slicedToArray from\"/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import\"./projectStyleSheet.css\";import Modal from\"./Modal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProjectComponent(props){var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),clicked=_React$useState2[0],setClicked=_React$useState2[1];//add a state hook here that says if its mobile or not. On the small screen I want to display less words in general, and pass the modal a shorter/abbreviated version.\nvar scrollRef=React.useRef('');var closeModal=function closeModal(){setClicked(0);console.log(\"yay\");console.log(clicked);};return/*#__PURE__*/_jsxs(\"div\",{ref:scrollRef,className:\" p-6 text-white w-11/12 sm:w-2/3 md:w-1/2 lg:w-1/3 rounded-lg mb-10 mt-5 sm:mx-5 divide-y-2 cursor-pointer border-purple-400 border-2\"//custom css cause tailwind can't do it\n,style:{backgroundColor:\"#383838\"},onClick:function onClick(event){// scrollRef.current.scrollIntoView(true); //true scrolls it to top \nif(!clicked)//Test if clicked is active, if not set it active.\nsetClicked(1);//if it was 0 it's now 1. On 1 we want it to scroll to top\n// console.log(scrollRef.current.getBoundingClientRect())\n// // window.scrollTo({top: scrollRef.current.offsetTop(), behavior: 'smooth'})\n}//add a second box shadow in with a unique color lol\n,children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl m-1 text-center font-bold \",children:props.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"pt-2 lg:text-lg\",children:[props.text.substring(0,178),\".. [View More]\"]}),Boolean(clicked)&&/*#__PURE__*/_jsx(Modal,{title:props.title,text:props.text,closeModal:closeModal,links:props.links})]});}export default ProjectComponent;","map":{"version":3,"sources":["/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/src/components/ProjectComponent.js"],"names":["React","Modal","ProjectComponent","props","useState","clicked","setClicked","scrollRef","useRef","closeModal","console","log","backgroundColor","event","title","text","substring","Boolean","links"],"mappings":"iJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,yBAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,C,wFAEA,QAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAgC,CAC5B,oBAA8BH,KAAK,CAACI,QAAN,CAAe,CAAf,CAA9B,oDAAOC,OAAP,qBAAgBC,UAAhB,qBACA;AAEA,GAAMC,CAAAA,SAAS,CAAGP,KAAK,CAACQ,MAAN,CAAa,EAAb,CAAlB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAI,CACrBH,UAAU,CAAC,CAAD,CAAV,CACAI,OAAO,CAACC,GAAR,CAAY,KAAZ,EACAD,OAAO,CAACC,GAAR,CAAYN,OAAZ,EACD,CAJD,CAMA,mBAEM,aACE,GAAG,CAAEE,SADP,CAGE,SAAS,CAAC,uIACV;AAJF,CAKE,KAAK,CAAE,CAACK,eAAe,CAAC,SAAjB,CALT,CAME,OAAO,CAAE,iBAACC,KAAD,CAAS,CACV;AACA,GAAI,CAACR,OAAL,CAAc;AACZC,UAAU,CAAC,CAAD,CAAV,CAAe;AACjB;AACA;AAEH,CAEL;AAfF,wBAiBE,WAAI,SAAS,CAAC,oCAAd,UAAoDH,KAAK,CAACW,KAA1D,EAjBF,cAkBE,WAAG,SAAS,CAAC,iBAAb,WAAgCX,KAAK,CAACY,IAAN,CAAWC,SAAX,CAAqB,CAArB,CAAwB,GAAxB,CAAhC,oBAlBF,CAoBFC,OAAO,CAACZ,OAAD,CAAP,eACA,KAAC,KAAD,EAAO,KAAK,CAAEF,KAAK,CAACW,KAApB,CAA2B,IAAI,CAAEX,KAAK,CAACY,IAAvC,CAA6C,UAAU,CAAEN,UAAzD,CAAqE,KAAK,CAAEN,KAAK,CAACe,KAAlF,EArBE,GAFN,CA6BH,CAED,cAAehB,CAAAA,gBAAf","sourcesContent":["import React from \"react\";\nimport \"./projectStyleSheet.css\"\nimport Modal from \"./Modal\";\n\nfunction ProjectComponent(props){\n    const [clicked, setClicked] = React.useState(0);\n    //add a state hook here that says if its mobile or not. On the small screen I want to display less words in general, and pass the modal a shorter/abbreviated version.\n\n    const scrollRef = React.useRef('');\n\n    const closeModal = ()=>{ \n      setClicked(0);\n      console.log(\"yay\");\n      console.log(clicked);\n    }\n\n    return(\n        \n          <div \n            ref={scrollRef}\n            \n            className=\" p-6 text-white w-11/12 sm:w-2/3 md:w-1/2 lg:w-1/3 rounded-lg mb-10 mt-5 sm:mx-5 divide-y-2 cursor-pointer border-purple-400 border-2\"\n            //custom css cause tailwind can't do it\n            style={{backgroundColor:\"#383838\" }}\n            onClick={(event)=>{\n                    // scrollRef.current.scrollIntoView(true); //true scrolls it to top \n                    if (!clicked) //Test if clicked is active, if not set it active.\n                      setClicked(1); //if it was 0 it's now 1. On 1 we want it to scroll to top\n                    // console.log(scrollRef.current.getBoundingClientRect())\n                    // // window.scrollTo({top: scrollRef.current.offsetTop(), behavior: 'smooth'})\n                        \n                }\n                }\n            //add a second box shadow in with a unique color lol\n          >\n            <h1 className=\"text-xl m-1 text-center font-bold \">{props.title}</h1>\n            <p className=\"pt-2 lg:text-lg\">{props.text.substring(0, 178)}.. [View More]</p>\n            {\n        Boolean(clicked) &&\n        <Modal title={props.title} text={props.text} closeModal={closeModal} links={props.links} ></Modal>\n        }\n    \n          </div>\n       \n    );\n}\n\nexport default ProjectComponent;"]},"metadata":{},"sourceType":"module"}