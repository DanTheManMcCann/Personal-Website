{"ast":null,"code":"var _jsxFileName = \"/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/src/Sections/GuessingGame.js\";\nimport React from \"react\";\nimport qBank from \"../assets/questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptyarr = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]; //hacked together - otherwise array behaves weirdly\n\nclass GuessingGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionBank: qBank,\n      scoreArray: emptyarr,\n      //Initialized as empty, will take a score\n      currentQuestion: 0,\n      score: 0,\n      selectedAnswer: emptyarr,\n      quizFinished: 1\n    };\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.prevQuestion = this.prevQuestion.bind(this);\n    this.calculateScore = this.calculateScore.bind(this);\n    this.handleChoice = this.handleChoice.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n  }\n\n  nextQuestion() {\n    console.log(this.state.scoreArray);\n    if (this.state.selectedAnswer[this.state.currentQuestion] == \"\") //make sure user selected answer\n      return;\n    if (this.state.currentQuestion > 8) //if it's last question next shouldn't work.\n      return;\n    this.setState(state => {\n      const scoreArray = state.scoreArray.map((item, j) => {\n        if (j === state.currentQuestion) {\n          if (state.questionBank[state.currentQuestion].correct == state.selectedAnswer[state.currentQuestion]) return 1; //here I want to see if they got it right\n          else return 0;\n        } else {\n          console.log(\"test2\");\n          return item;\n        }\n      });\n      console.log(scoreArray);\n      return {\n        scoreArray: scoreArray\n      };\n    }); //testfor correct or false\n\n    console.log(this.state.scoreArray); //increment count here\n\n    this.setState({\n      currentQuestion: this.state.currentQuestion + 1\n    });\n  }\n\n  prevQuestion() {\n    if (this.state.currentQuestion > 0) this.setState({\n      currentQuestion: this.state.currentQuestion - 1\n    });\n  }\n\n  calculateScore() {\n    //going into this function they have to be on the last question\n    if (this.state.selectedAnswer[9] == \"\") return; //at this point we know they answered something\n\n    let counter = 0;\n\n    for (let elem of this.state.scoreArray) {\n      if (elem == 1) {\n        counter++;\n      }\n    } //can use simple logic to test to see if their last element is right\n\n\n    if (this.state.selectedAnswer[9] == this.state.questionBank[9].correct) counter++; //increment counter - they got last one right\n\n    console.log(counter);\n    this.setState({\n      score: counter,\n      quizFinished: 1\n    });\n    console.log(this.state.scoreArray);\n  }\n\n  handleChoice(event) {\n    console.log(event.target.getAttribute(\"value\")); //have to use get attribute instead of just target.value here.\n\n    this.setState(state => {\n      const selectedAnswer = state.selectedAnswer.map((item, j) => {\n        if (j === state.currentQuestion) {\n          return event.target.getAttribute(\"value\");\n        } else {\n          return item;\n        }\n      });\n      return {\n        selectedAnswer: selectedAnswer\n      };\n    });\n    console.log(this.state.selectedAnswer);\n  }\n\n  resetGame() {\n    this.setState( //just copy and paste original state\n    {\n      questionBank: qBank,\n      scoreArray: emptyarr,\n      //Initialized as empty, will take a score\n      currentQuestion: 0,\n      score: 0,\n      selectedAnswer: emptyarr,\n      quizFinished: 0\n    });\n  }\n\n  render() {\n    const map1 = this.state.questionBank[this.state.currentQuestion].answers.map((item, j) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        value: item,\n        onClick: this.handleChoice,\n        className: item == this.state.selectedAnswer[this.state.currentQuestion] ? \"m-2 border-green-500 border-2 p-2 rounded-md cursor-pointer\" : \" m-2 border-red-500 border-2 p-2 rounded-md cursor-pointer\",\n        children: [\" \", item, \" \"]\n      }, item, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4\",\n      style: {\n        width: \"400px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"m-4 text-center text-purple-500 \",\n        children: \"About Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"Hi! I'm a General Engineering Major at Santa Clara University, planning to graduate in 2023. Some interests of mine are web design/programming, making music, and reading... but enough 'About Me'.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center mt-4\",\n        children: \"  These sections are often boring so I made mine an interactive quiz. Answer these totally unbiased questions to see how good of a fit I would be at your company!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), !this.state.quizFinished ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" my-10 bg-white border-black rounded-lg shadow-xl p-4\",\n        style: {\n          width: \"340px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Question \", this.state.currentQuestion + 1, \" /\", \" \", this.state.questionBank.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: this.state.questionBank[this.state.currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row justify-start flex-nowrap\",\n          children: map1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.prevQuestion,\n            className: this.state.currentQuestion == 0 ? \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-l opacity-50 cursor-not-allowed\" : \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-l\",\n            children: [\" \", \"Previous\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), this.state.currentQuestion != 9 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.nextQuestion,\n            className: this.state.selectedAnswer[this.state.currentQuestion] == \"\" || this.state.currentQuestion == 9 ? \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r opacity-50 cursor-not-allowed\" : \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r\",\n            children: [\" \", \"Next\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), this.state.currentQuestion == 9 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.calculateScore,\n          className: this.state.selectedAnswer[this.state.currentQuestion] == \"\" ? \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r opacity-50 cursor-not-allowed\" : \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r\",\n          children: \" Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" my-10 bg-white border-black rounded-lg shadow-xl p-4\",\n        style: {\n          width: \"340px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" Your Score was \", this.state.score, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.score > 5 ? \"We have a lot in common!\" : \"We have diverse perspectives!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" You should hire me!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded\",\n          onClick: this.resetGame,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default GuessingGame;","map":{"version":3,"sources":["/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/src/Sections/GuessingGame.js"],"names":["React","qBank","emptyarr","GuessingGame","Component","constructor","props","state","questionBank","scoreArray","currentQuestion","score","selectedAnswer","quizFinished","nextQuestion","bind","prevQuestion","calculateScore","handleChoice","resetGame","console","log","setState","map","item","j","correct","counter","elem","event","target","getAttribute","render","map1","answers","width","length","question"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport qBank from \"../assets/questions\";\n\nconst emptyarr = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]; //hacked together - otherwise array behaves weirdly\n\nclass GuessingGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionBank: qBank,\n      scoreArray: emptyarr, //Initialized as empty, will take a score\n      currentQuestion: 0,\n      score: 0,\n      selectedAnswer: emptyarr,\n      quizFinished: 1,\n    };\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.prevQuestion = this.prevQuestion.bind(this);\n    this.calculateScore = this.calculateScore.bind(this);\n    this.handleChoice = this.handleChoice.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n  }\n\n  nextQuestion() {\n    console.log(this.state.scoreArray);\n    if (this.state.selectedAnswer[this.state.currentQuestion] == \"\")\n      //make sure user selected answer\n      return;\n    if (this.state.currentQuestion > 8)\n      //if it's last question next shouldn't work.\n      return;\n    this.setState((state) => {\n      const scoreArray = state.scoreArray.map((item, j) => {\n        if (j === state.currentQuestion) {\n          if (\n            state.questionBank[state.currentQuestion].correct ==\n            state.selectedAnswer[state.currentQuestion]\n          )\n            return 1;\n          //here I want to see if they got it right\n          else return 0;\n        } else {\n          console.log(\"test2\");\n          return item;\n        }\n      });\n      console.log(scoreArray);\n      return { scoreArray: scoreArray };\n    });\n    //testfor correct or false\n    console.log(this.state.scoreArray);\n    //increment count here\n    this.setState({ currentQuestion: this.state.currentQuestion + 1 });\n  }\n\n  prevQuestion() {\n    if (this.state.currentQuestion > 0)\n      this.setState({ currentQuestion: this.state.currentQuestion - 1 });\n  }\n\n  calculateScore() {\n    //going into this function they have to be on the last question\n    if (this.state.selectedAnswer[9] == \"\") return;\n\n    //at this point we know they answered something\n\n    let counter = 0;\n    for (let elem of this.state.scoreArray) {\n      if (elem == 1) {\n        counter++;\n      }\n    }\n    //can use simple logic to test to see if their last element is right\n    if (this.state.selectedAnswer[9] == this.state.questionBank[9].correct)\n      counter++; //increment counter - they got last one right\n\n    console.log(counter);\n    this.setState({ score: counter, quizFinished: 1 });\n    console.log(this.state.scoreArray);\n  }\n\n  handleChoice(event) {\n    console.log(event.target.getAttribute(\"value\")); //have to use get attribute instead of just target.value here.\n    this.setState((state) => {\n      const selectedAnswer = state.selectedAnswer.map((item, j) => {\n        if (j === state.currentQuestion) {\n          return event.target.getAttribute(\"value\");\n        } else {\n          return item;\n        }\n      });\n      return { selectedAnswer: selectedAnswer };\n    });\n    console.log(this.state.selectedAnswer);\n  }\n\n  resetGame() {\n    this.setState(\n      //just copy and paste original state\n      {\n        questionBank: qBank,\n        scoreArray: emptyarr, //Initialized as empty, will take a score\n        currentQuestion: 0,\n        score: 0,\n        selectedAnswer: emptyarr,\n        quizFinished: 0,\n      }\n    );\n  }\n\n  render() {\n    const map1 = this.state.questionBank[\n      this.state.currentQuestion\n    ].answers.map((item, j) => {\n      return (\n        <button\n          key={item}\n          value={item}\n          onClick={this.handleChoice}\n          className={\n            item == this.state.selectedAnswer[this.state.currentQuestion]\n              ? \"m-2 border-green-500 border-2 p-2 rounded-md cursor-pointer\"\n              : \" m-2 border-red-500 border-2 p-2 rounded-md cursor-pointer\"\n          }\n        >\n          {\" \"}\n          {item}{\" \"}\n        </button>\n      );\n    });\n\n    return (\n      <div className=\"p-4\" style={{ width: \"400px\" }}>\n        <h1 className=\"m-4 text-center text-purple-500 \">About Me</h1>\n        <p className=\"text-center\">\n          Hi! I'm a General Engineering Major at Santa Clara University, planning to graduate in 2023. Some interests of mine are web design/programming, making music, and reading... but enough 'About Me'.\n         \n        </p>\n        <p className=\"text-center mt-4\">  These sections are often boring so I made mine an interactive\n          quiz. Answer these totally unbiased questions to see how good of a fit I would be at your company!\n          </p>\n        {!this.state.quizFinished ? (\n          <div className=\" my-10 bg-white border-black rounded-lg shadow-xl p-4\" style={{ width: \"340px\" }}>\n            <div>\n              Question {this.state.currentQuestion + 1} /{\" \"}\n              {this.state.questionBank.length}\n            </div>\n            <div className=\"\">\n              {this.state.questionBank[this.state.currentQuestion].question}\n            </div>\n            <div className=\"flex flex-row justify-start flex-nowrap\">\n              {map1}\n            </div>\n            <div className=\"inline-flex\">\n              <button\n                onClick={this.prevQuestion}\n                className={\n                  this.state.currentQuestion == 0\n                    ? \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-l opacity-50 cursor-not-allowed\"\n                    : \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-l\"\n                }\n              >\n                {\" \"}\n                Previous{\" \"}\n              </button>\n              {this.state.currentQuestion != 9 &&<button\n                onClick={this.nextQuestion}\n                className={\n                  this.state.selectedAnswer[this.state.currentQuestion] == \"\" ||\n                  this.state.currentQuestion == 9\n                    ? \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r opacity-50 cursor-not-allowed\"\n                    : \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r\"\n                }\n              >\n                {\" \"}\n                Next\n              </button>\n              }\n            </div>\n\n            {this.state.currentQuestion == 9 && (\n              <button onClick={this.calculateScore} className={\n                  this.state.selectedAnswer[this.state.currentQuestion] == \"\"\n                    ? \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r opacity-50 cursor-not-allowed\"\n                    : \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r\"\n                }> Calculate</button>\n            )}\n          </div>\n        ) : (\n          <div className=\" my-10 bg-white border-black rounded-lg shadow-xl p-4\" style={{ width: \"340px\" }}>\n            <div> Your Score was {this.state.score}.</div>\n            <div> \n            {this.state.score>5?\"We have a lot in common!\":\"We have diverse perspectives!\"}\n            \n            </div>\n            <div> You should hire me!</div>\n            <button className=\"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded\" onClick={this.resetGame}>Play Again</button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default GuessingGame;\n"]},"metadata":{},"sourceType":"module"}