{"ast":null,"code":"var _jsxFileName = \"/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/personal-website/src/Sections/GuessingGame.js\";\nimport React from \"react\";\nimport qBank from \"../assets/questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emptyarr = ['', '', '', '', '', '', '', '', '', '']; //hacked together - otherwise array behaves weirdly\n\nclass GuessingGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionBank: qBank,\n      scoreArray: emptyarr,\n      //Initialized as empty, will take a score\n      currentQuestion: 0,\n      score: 0,\n      selectedAnswer: emptyarr\n    };\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.prevQuestion = this.prevQuestion.bind(this);\n    this.calculateScore = this.calculateScore.bind(this);\n    this.handleChoice = this.handleChoice.bind(this);\n  }\n\n  nextQuestion() {\n    console.log(this.state.scoreArray);\n    this.setState(state => {\n      const scoreArray = state.scoreArray.map((item, j) => {\n        if (j === state.currentQuestion) {\n          console.log(\"test1\");\n          return 1;\n        } else {\n          console.log(\"test2\");\n          return item;\n        }\n      });\n      console.log(scoreArray);\n      return {\n        scoreArray: scoreArray\n      };\n    }); //testfor correct or false\n\n    console.log(this.state.scoreArray); //increment count here\n\n    if (this.state.currentQuestion < 9) this.setState({\n      currentQuestion: this.state.currentQuestion + 1\n    });\n  }\n\n  prevQuestion() {\n    if (this.state.currentQuestion > 0) this.setState({\n      currentQuestion: this.state.currentQuestion - 1\n    });\n  }\n\n  calculateScore() {\n    let counter = 0;\n\n    for (let elem of this.state.scoreArray) {\n      if (elem == 1) {\n        counter++;\n      }\n    }\n\n    console.log(counter);\n    this.setState({\n      score: counter\n    });\n    console.log(this.state.scoreArray);\n  }\n\n  handleChoice(event) {\n    console.log(event.target.getAttribute(\"value\")); //have to use get attribute instead of just target.value here.\n\n    this.setState(state => {\n      const selectedAnswer = state.selectedAnswer.map((item, j) => {\n        if (j === state.currentQuestion) {\n          return event.target.getAttribute(\"value\");\n        } else {\n          return item;\n        }\n      });\n      return {\n        selectedAnswer: selectedAnswer\n      };\n    });\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    const map1 = this.state.questionBank[this.state.currentQuestion].answers.map((item, j) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        value: item,\n        onClick: this.handleChoice,\n        className: item == this.state.selectedAnswer[this.state.currentQuestion] ? 'bg-green-500' : 'bg-red-500',\n        children: [\" hello \", item, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Question \", this.state.currentQuestion + 1, \" / \", this.state.questionBank.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.questionBank[this.state.currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: map1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.prevQuestion,\n        children: \" Previous \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.nextQuestion,\n        children: \" Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Score: \", this.state.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.calculateScore,\n        children: \" Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default GuessingGame;","map":{"version":3,"sources":["/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/personal-website/src/Sections/GuessingGame.js"],"names":["React","qBank","emptyarr","GuessingGame","Component","constructor","props","state","questionBank","scoreArray","currentQuestion","score","selectedAnswer","nextQuestion","bind","prevQuestion","calculateScore","handleChoice","console","log","setState","map","item","j","counter","elem","event","target","getAttribute","value","render","map1","answers","length","question"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport qBank from \"../assets/questions\";\n\nconst emptyarr = ['','','','','','','','','','',]; //hacked together - otherwise array behaves weirdly\n\nclass GuessingGame extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            questionBank: qBank,\n            scoreArray: emptyarr, //Initialized as empty, will take a score\n            currentQuestion:0,\n            score:0,\n            selectedAnswer: emptyarr,\n        }\n        this.nextQuestion = this.nextQuestion.bind(this);\n        this.prevQuestion = this.prevQuestion.bind(this);\n        this.calculateScore = this.calculateScore.bind(this);\n        this.handleChoice = this.handleChoice.bind(this);\n    }\n\n    nextQuestion(){\n        console.log(this.state.scoreArray);\n        this.setState((state)=>{\n            const scoreArray = state.scoreArray.map((item, j) =>{\n                if (j===state.currentQuestion){\n                    console.log(\"test1\");\n                    return 1;\n                }else{\n                    console.log(\"test2\");\n                    return item;\n                }\n                });\n                console.log(scoreArray)\n                return {scoreArray: scoreArray};\n            });\n         //testfor correct or false\n        console.log(this.state.scoreArray);\n        //increment count here\n        if (this.state.currentQuestion < 9)\n            this.setState({currentQuestion: this.state.currentQuestion+1});\n    }\n\n    prevQuestion(){\n        if (this.state.currentQuestion > 0)\n            this.setState({currentQuestion: this.state.currentQuestion-1});\n    }\n\n    calculateScore(){\n        let counter=0;\n        for (let elem of this.state.scoreArray){\n            if (elem ==1){\n                counter++;\n            }\n        }\n        console.log(counter);\n        this.setState({score: counter});\n        console.log(this.state.scoreArray);\n    }\n\n    handleChoice(event){\n\n        console.log(event.target.getAttribute(\"value\")); //have to use get attribute instead of just target.value here.\n        this.setState((state)=>{\n            const selectedAnswer = state.selectedAnswer.map((item, j) =>{\n                if (j===state.currentQuestion){\n                    return event.target.getAttribute(\"value\");\n                }else{\n                    return item;\n                }\n                });\n                return {selectedAnswer: selectedAnswer};\n            });\n        this.setState({value: event.target.value});\n\n    }\n\n    render(){\n        const map1 = this.state.questionBank[this.state.currentQuestion].answers.map((item,j)=>{\n            return <div value={item} onClick={this.handleChoice} className={item==this.state.selectedAnswer[this.state.currentQuestion]?'bg-green-500':'bg-red-500'}> hello {item} </div>\n        });\n\n    return (\n        <div>\n        <div>Question {this.state.currentQuestion + 1} / {this.state.questionBank.length}</div>\n        <div>{this.state.questionBank[this.state.currentQuestion].question}</div>\n        <div>{map1}</div>\n        <button onClick= {this.prevQuestion}> Previous </button>\n        <button onClick = {this.nextQuestion}> Next</button>\n        <div>Score: {this.state.score}</div>\n        <button onClick={this.calculateScore}> Calculate</button>\n        </div>\n    );\n    }\n}\n\nexport default GuessingGame;"]},"metadata":{},"sourceType":"module"}