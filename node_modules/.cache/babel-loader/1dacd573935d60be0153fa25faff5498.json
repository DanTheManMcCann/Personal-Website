{"ast":null,"code":"var _jsxFileName = \"/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/src/components/TextAnimation.js\",\n    _s = $RefreshSig$();\n\nimport gsap from \"gsap\";\nimport React, { useRef, useEffect, useState, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TextAnimation() {\n  _s();\n\n  const timeline = useMemo(() => gsap.timeline({\n    paused: true\n  }), []);\n  const [ref1, ref2, ref3, ref4] = [useRef(0)];\n  const [play, setPlay] = useState(true);\n  useEffect(() => {\n    timeline.to(ref1.current, {\n      y: -30,\n      opacity: 0\n    });\n  }, []);\n  useEffect(() => {\n    if (play) {\n      timeline.play();\n    } else {\n      timeline.reverse();\n    }\n\n    console.log(play);\n  }, [play]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPlay(true),\n      children: \" forward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPlay(false),\n      children: \" reverse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref1,\n      className: \"text-white font-bold z-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: ref2,\n        children: \"Hi I'm Daniel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hi I'm Daniel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hi I'm Daniel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hi I'm Daniel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextAnimation, \"6KKBM8ZX5sAVl4WA4+JLfFDRk4s=\");\n\n_c = TextAnimation;\nexport default TextAnimation;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextAnimation\");","map":{"version":3,"sources":["/Users/danielms/Desktop/Programming 2021-2022/Personal-Website/src/components/TextAnimation.js"],"names":["gsap","React","useRef","useEffect","useState","useMemo","TextAnimation","timeline","paused","ref1","ref2","ref3","ref4","play","setPlay","to","current","y","opacity","reverse","console","log"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,OAA7C,QAA4D,OAA5D;;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB,QAAMC,QAAQ,GAAGF,OAAO,CAAC,MAAML,IAAI,CAACO,QAAL,CAAc;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAd,CAAP,EAAwC,EAAxC,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,IAA2B,CAACV,MAAM,CAAC,CAAD,CAAP,CAAjC;AAEA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ,CAACQ,EAAT,CAAYN,IAAI,CAACO,OAAjB,EAA0B;AACxBC,MAAAA,CAAC,EAAC,CAAC,EADqB;AAExBC,MAAAA,OAAO,EAAC;AAFgB,KAA1B;AAID,GALQ,EAKN,EALM,CAAT;AAOAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,IAAJ,EAAU;AACRN,MAAAA,QAAQ,CAACM,IAAT;AACD,KAFD,MAEO;AACLN,MAAAA,QAAQ,CAACY,OAAT;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD,GAPQ,EAON,CAACA,IAAD,CAPM,CAAT;AASA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,GAAG,EAAEL,IAAV;AAAgB,MAAA,SAAS,EAAC,0BAA1B;AAAA,8BACE;AAAG,QAAA,GAAG,EAAEC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAYD;;GAlCQJ,a;;KAAAA,a;AAoCT,eAAeA,aAAf","sourcesContent":["import gsap from \"gsap\";\nimport React, { useRef, useEffect, useState, useMemo } from \"react\";\n\nfunction TextAnimation() {\n  const timeline = useMemo(() => gsap.timeline({ paused: true }), []);\n  const [ref1, ref2, ref3, ref4] = [useRef(0)];\n  \n  const [play, setPlay] = useState(true);\n\n  useEffect(() => {\n    timeline.to(ref1.current, {\n      y:-30,\n      opacity:0,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (play) {\n      timeline.play();\n    } else {\n      timeline.reverse();\n    }\n    console.log(play);\n  }, [play]);\n\n  return (\n    <>\n      <button onClick={() => setPlay(true)}> forward</button>\n      <button onClick={() => setPlay(false)}> reverse</button>\n      <div ref={ref1} className=\"text-white font-bold z-0\">\n        <p ref={ref2}>Hi I'm Daniel</p>\n        <p>Hi I'm Daniel</p>\n        <p>Hi I'm Daniel</p>\n        <p>Hi I'm Daniel</p>\n      </div>\n    </>\n  );\n}\n\nexport default TextAnimation;\n"]},"metadata":{},"sourceType":"module"}