{"version":3,"sources":["logo.svg","components/navigationbar.js","components/ButtonTrigger.js","components/TextAnimation.js","components/TextAnimation2.js","components/Modal.js","components/ProjectComponent.js","Sections/Homepage.js","components/test.js","components/ScrollCircle.js","Sections/CurrentProjects.js","assets/questions.js","Sections/GuessingGame.js","App.js","reportWebVitals.js","index.js"],"names":["inner","width","height","display","flexDirection","justifyContent","alignItems","gap","textAlign","fontWeight","color","NavigationBar","props","style","className","href","displayName","ButtonTrigger","onClick","handleClick","TextAnimation","timeline","useMemo","gsap","paused","ref1","useRef","useState","play","setPlay","useEffect","from","current","y","x","reverse","console","log","ref","TextAnimation2","Modal","reactDom","createPortal","position","top","zIndex","backgroundColor","text","document","querySelector","ProjectComponent","React","clicked","setClicked","scrollRef","id","event","title","HomePage","bind","isActive","this","lockScroll","scrollSnapStop","Component","Test","ScrollCircle","CurrentProjects","specialid","qBank","question","answers","correct","questionId","emptyarr","GuessingGame","state","questionBank","scoreArray","currentQuestion","score","selectedAnswer","quizFinished","nextQuestion","prevQuestion","calculateScore","handleChoice","resetGame","setState","map","item","j","counter","target","getAttribute","map1","value","length","window","onbeforeunload","scrollTo","App","handleScroll","smallScroll","yPos","scrollLock","scrollPos","Promise","resolve","setTimeout","innerWidth","innerHeight","authenticate","then","ele","getElementById","outerHTML","addEventListener","removeEventListener","deltaY","scrollY","overflow","src","logo","alt","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b09daf91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\n\n\nconst inner = {\n  width:\"80%\",\n  height:\"100%\",\n  display:\"flex\",\n  flexDirection:\"row\",\n  justifyContent:\"center\",\n  alignItems:\"center\",\n  gap:\"60px\",\n  textAlign:\"center\",\n  fontWeight:\"bold\",\n  color:\"white\",\n} \n\nconst item = {\n    textDecoration:\"none\",\n    color:\"white\",\n}\n\n\nfunction NavigationBar(props){\n\n    return(\n        <div style={{height:props.height}} className=\"bg-black flex w-full justify-center sticky top-0 z-50\">\n            <div style={inner}>\n                <a className=\"link-white hidden sm:block\" style={{display: props.display}} href=\"#statistics\" >Statistics</a>\n                <a className=\"link-white hidden sm:block\" style={{display: props.display}}  href=\"#purpose\">Our Purpose</a>\n                <a className=\"text-xl text-white w-60 \" style={{display: props.displayName}} href=\"#home\" >Daniel McCann-Sayles</a>\n                <a className=\"link-white hidden sm:block\" style={{display: props.display}} href=\"#about-us\">About Us</a>\n                <a className=\"link-white hidden sm:block\" style={{display: props.display}} href=\"#partners\">Partners</a>\n            </div>\n        </div>\n    );\n}\n\nexport default NavigationBar;","//functional lil button uh yeah\n\nfunction ButtonTrigger(props) {\n  return (\n    <button\n      className=\"class=bg-transparent hover:bg-blue-700 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-700 hover:border-transparent rounded\"\n      onClick={props.handleClick}\n    >\n      Click Me\n    </button>\n  );\n}\n\nexport default ButtonTrigger;\n","import gsap from \"gsap\";\nimport React, { useRef, useEffect, useState, useMemo } from \"react\";\n\nfunction TextAnimation() {\n  const timeline = useMemo(() => gsap.timeline({ paused: true }), []);\n  const ref1 = useRef(0);\n  const [play, setPlay] = useState(true);\n\n  useEffect(() => {\n    timeline.from(ref1.current, {\n      y: 100,\n      x: 100,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (play) {\n      timeline.play();\n    } else {\n      timeline.reverse();\n    }\n    console.log(play);\n  }, [play]);\n\n  return (\n    <>\n      <button onClick={() => setPlay(true)}> forward</button>\n      <button onClick={() => setPlay(false)}> reverse</button>\n      <p ref={ref1} className=\"text-white font-bold z-0\">\n        Hi I'm Daniel\n      </p>\n    </>\n  );\n}\n\nexport default TextAnimation;\n","import { Controls, PlayState, Timeline, Tween } from 'react-gsap';\nimport React, { useRef, useEffect, useState, useMemo } from \"react\";\n\n\n\nfunction TextAnimation2() {\n\n\n    return (\n \n        <Timeline\n          target={\n            <div style={{ width: '100px', height: '100px', background: '#ccc', zIndex: '0' }} />\n          }\n        >\n          <Tween from={{ opacity: 0 }} to={{ opacity: 1 }} duration={2} />\n          <Tween to={{ x: '200px' }} />\n          <Tween to={{ rotation: 180 }} position=\"+=1\" />\n        </Timeline>\n\n    );\n  }\n  \n  export default TextAnimation2;\n  ","import reactDom from \"react-dom\";\nimport React from \"react\";\n\nfunction Modal(props){\n    return reactDom.createPortal(\n        <div style={{height : \"100vh\" , width: \"100vw\", position:\"fixed\", top:\"0px\", zIndex:\"5\", backgroundColor:\"green\"}}\n        className={\"h-full w-full fixed top-0, z-10, bg-white \"}\n        >\n        <h1>Heyy</h1>\n        <p>{props.text}</p>\n        </div>,\n        document.querySelector('#modal')\n    );\n}\n\nexport default Modal;","import React from \"react\";\nimport \"./projectStyleSheet.css\"\nimport Modal from \"./Modal\";\n\nfunction ProjectComponent(props){\n    const [clicked, setClicked] = React.useState(0);\n\n    const scrollRef = React.useRef('');\n    return(\n        \n          <div \n            ref={scrollRef}\n            id = \"shadow1\" \n            className=\" p-10 text-white w-80 rounded-lg my-10 mx-10 divide-y-2 cursor-pointer\"\n            //custom css cause tailwind can't do it\n            style={{backgroundColor:\"#464141\" }}\n            onClick={(event)=>{\n                    // scrollRef.current.scrollIntoView(true); //true scrolls it to top \n                    setClicked(!clicked); //if it was 0 it's now 1. On 1 we want it to scroll to top\n                    // console.log(scrollRef.current.getBoundingClientRect())\n                    // // window.scrollTo({top: scrollRef.current.offsetTop(), behavior: 'smooth'})\n                        \n                }\n                }\n            //add a second box shadow in with a unique color lol\n          >\n            <h1 className=\"text-xl m-1\">{props.title}</h1>\n            <p>{props.text}</p>\n            {\n        clicked &&\n        <Modal text={props.text}></Modal>\n        }\n    \n          </div>\n       \n    );\n}\n\nexport default ProjectComponent;","import React from \"react\";\nimport ButtonTrigger from \"../components/ButtonTrigger\";\nimport TextAnimation from \"../components/TextAnimation\";\nimport TextAnimation2 from \"../components/TextAnimation2\";\nimport ScrollLock, { TouchScrollable } from \"react-scrolllock\";\nimport ProjectComponent from \"../components/ProjectComponent\";\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    console.log(\"test 100\");\n  }\n\n  render() {\n    return (\n      <>\n        <ScrollLock isActive={this.props.lockScroll}>\n        <div className=\"flex h-screen bg-gradient-to-r from-green-400 to-blue-500 items-center justify-evenly\" style={{scrollSnapStop: 'always'}}>\n          <TextAnimation></TextAnimation>\n        </div>\n        </ScrollLock>\n        <TouchScrollable>\n            <div className=\"h- bg-black\">Hello</div>\n        </TouchScrollable>\n        <div className=\"bg-green-500 md:bg-red-500 lg:bg-green-500\">\n          <div>blah blah</div>\n          <ButtonTrigger handleClick={this.handleClick}></ButtonTrigger>\n          <ButtonTrigger handleClick={this.props.onClick}></ButtonTrigger>\n        </div>\n       \n      </>\n    );\n  }\n}\n\nexport default HomePage;\n","import ButtonTrigger from \"./ButtonTrigger\";\n\n\n\nfunction Test(props){\n    function onClick(){\n        console.log(\"test\");\n    }\n    \n    return (\n        <ButtonTrigger handleClick={onClick}></ButtonTrigger>\n    )\n}\n\nexport default Test;","import React from \"react\";\nimport Draggable from \"react-draggable\";\n\nfunction ScrollCircle(){\n    return(\n    <Draggable>\n        <div>Test</div>\n    </Draggable>\n    );\n}\n\nexport default ScrollCircle;","import React from \"react\";\nimport ProjectComponent from \"../components/ProjectComponent\";\n\n\n\nfunction CurrentProjects() {\n  return (\n    <>\n    \n    <div style={{backgroundColor:\"#E0E0E0\"}} className=\" flex flex-wrap bg-white h-auto items-center justify-evenly\">\n        <h1 className = \"font-bold mx-10 my-5\">Current Projects</h1>\n      <ProjectComponent\n        specialid=\"1\"\n        title=\"project 1\"\n        text=\"Body of project 1. My name is daniel blah b\"\n      ></ProjectComponent>\n      <ProjectComponent\n        specialid=\"2\"\n        title=\"project 1\"\n        text=\"Body of project 2. My name is daniel blah b\"\n      ></ProjectComponent>\n      <ProjectComponent\n        specialid=\"3\"\n        title=\"project 1\"\n        text=\"Body of project 3. My name is daniel blah b\"\n      ></ProjectComponent>\n      \n    </div>\n    </>\n  );\n}\n\nexport default CurrentProjects;\n","const qBank = [\n    {\n        question:\n          \"Which one is objectively better?\",\n        answers: [\"cat\", \"dog\"],\n        correct: \"cat\",\n        questionId: \"101\"\n      },\n      {\n        question:\n          \"Which one is objectively better?\",\n        answers: [\"cat\", \"dog\", \"parrot\", \"rat\"],\n        correct: \"cat\",\n        questionId: \"102\"\n      },\n      {\n        question:\n          \"Which one is objectively better?\",\n        answers: [\"cat\", \"dog\"],\n        correct: \"cat\",\n        questionId: \"103\"\n      },\n      {\n        question:\n          \"Which one is objectively better?\",\n        answers: [\"cat\", \"dog\"],\n        correct: \"cat\",\n        questionId: \"104\"\n      },\n      {\n        question:\n          \"Which one is objectively better?\",\n        answers: [\"cat\", \"dog\"],\n        correct: \"cat\",\n        questionId: \"105\"\n      },\n      {\n        question:\n          \"Which one is objectively better?\",\n        answers: [\"cat\", \"dog\"],\n        correct: \"cat\",\n        questionId: \"106\"\n      },\n      {\n        question:\n          \"Which one is objectively better?\",\n        answers: [\"cat\", \"dog\"],\n        correct: \"cat\",\n        questionId: \"107\"\n      },\n      {\n        question:\n          \"Which one is objectively better?\",\n        answers: [\"cat\", \"dog\"],\n        correct: \"cat\",\n        questionId: \"108\"\n      },\n      {\n        question:\n          \"Which one is objectively better?\",\n        answers: [\"cat\", \"dog\"],\n        correct: \"cat\",\n        questionId: \"109\"\n      },\n      {\n        question:\n          \"Which one is objectively better?\",\n        answers: [\"cat\", \"dog\"],\n        correct: \"cat\",\n        questionId: \"110\"\n      },\n\n]\n\nexport default qBank;","\nimport React from \"react\";\nimport qBank from \"../assets/questions\";\n\nconst emptyarr = ['','','','','','','','','','',]; //hacked together - otherwise array behaves weirdly\n\nclass GuessingGame extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            questionBank: qBank,\n            scoreArray: emptyarr, //Initialized as empty, will take a score\n            currentQuestion:0,\n            score:0,\n            selectedAnswer: emptyarr,\n            quizFinished:0,\n        }\n        this.nextQuestion = this.nextQuestion.bind(this);\n        this.prevQuestion = this.prevQuestion.bind(this);\n        this.calculateScore = this.calculateScore.bind(this);\n        this.handleChoice = this.handleChoice.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n    }\n\n    nextQuestion(){\n        console.log(this.state.scoreArray);\n        if (this.state.selectedAnswer[this.state.currentQuestion] =='') //make sure user selected answer\n            return;\n        if (this.state.currentQuestion > 8) //if it's last question next shouldn't work.\n            return;\n        this.setState((state)=>{\n            const scoreArray = state.scoreArray.map((item, j) =>{\n                if (j===state.currentQuestion){\n                    if (state.questionBank[state.currentQuestion].correct == state.selectedAnswer[state.currentQuestion])\n                        return 1; //here I want to see if they got it right\n                    else   \n                        return 0;\n                }else{\n                    console.log(\"test2\");\n                    return item;\n                }\n                });\n                console.log(scoreArray)\n                return {scoreArray: scoreArray};\n            });\n         //testfor correct or false\n        console.log(this.state.scoreArray);\n        //increment count here\n        this.setState({currentQuestion: this.state.currentQuestion+1});\n    }\n\n    prevQuestion(){\n        if (this.state.currentQuestion > 0)\n            this.setState({currentQuestion: this.state.currentQuestion-1});\n    }\n\n    calculateScore(){ //going into this function they have to be on the last question\n        if (this.state.selectedAnswer[9]== '')\n            return;\n\n        //at this point we know they answered something\n        \n\n        let counter=0;\n        for (let elem of this.state.scoreArray){\n            if (elem ==1){\n                counter++;\n            }\n        }\n        //can use simple logic to test to see if their last element is right\n        if (this.state.selectedAnswer[9] == this.state.questionBank[9].correct)\n            counter++; //increment counter - they got last one right\n        \n        console.log(counter);\n        this.setState({score: counter, quizFinished:1});\n        console.log(this.state.scoreArray);\n    }\n\n    handleChoice(event){\n\n        console.log(event.target.getAttribute(\"value\")); //have to use get attribute instead of just target.value here.\n        this.setState((state)=>{\n            const selectedAnswer = state.selectedAnswer.map((item, j) =>{\n                if (j===state.currentQuestion){\n                    return event.target.getAttribute(\"value\");\n                }else{\n                    return item;\n                }\n                });\n                return {selectedAnswer: selectedAnswer};\n            });\n            console.log(this.state.selectedAnswer)\n\n    }\n\n    resetGame(){\n        this.setState(//just copy and paste original state\n           {\n                questionBank: qBank,\n                scoreArray: emptyarr, //Initialized as empty, will take a score\n                currentQuestion:0,\n                score:0,\n                selectedAnswer: emptyarr,\n                quizFinished:0,\n            }\n        )\n    }\n\n    render(){\n        const map1 = this.state.questionBank[this.state.currentQuestion].answers.map((item,j)=>{\n            return <button key={item} value={item} onClick={this.handleChoice} className={item==this.state.selectedAnswer[this.state.currentQuestion]?'mx-2 border-green-500 border-2 p-2 rounded-md cursor-pointer':' mx-2 border-red-500 border-2 p-2 rounded-md cursor-pointer'}> hello {item} </button>\n        });\n\n            \n    return (\n\n        \n        <div>\n        <h1 className=\"text-center m-4 font-size-lg font-bold\">About Me</h1>\n        <p className=\"m-4 text-center\"> About Me sections are normally boring, so I made mine an interactive quiz</p>\n        {!this.state.quizFinished\n            ?<div className=\"mx-4 my-10 bg-gray-200 rounded-lg shadow-xl p-4\">\n            <div>Question {this.state.currentQuestion + 1} / {this.state.questionBank.length}</div>\n            <div>{this.state.questionBank[this.state.currentQuestion].question}</div>\n            <div className=\"flex flex-row justify-start flex-nowrap\">{map1}</div>\n            <div className=\"inline-flex\">\n                <button onClick= {this.prevQuestion} className={ (this.state.currentQuestion == 0)? \"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-l opacity-50 cursor-not-allowed\":\"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-l\"}> Previous </button>\n                <button onClick = {this.nextQuestion} className={(this.state.selectedAnswer[this.state.currentQuestion] == '' || this.state.currentQuestion==9)?\"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r opacity-50 cursor-not-allowed\":\"bg-yellow-300 hover:bg-yellow-500 text-yellow 700 font-bold py-2 px-4 rounded-r\"}> Next</button>\n            </div>\n            <div>Score: {this.state.score}</div>\n            {this.state.currentQuestion==9 && <button onClick={this.calculateScore}> Calculate</button>}\n            </div>\n            : <>\n            <div> Your Score: {this.state.score}</div>\n            <button onClick={this.resetGame}>Play Again</button>\n            </>\n            \n            }\n        </div>\n\n    );\n    }\n}\n\nexport default GuessingGame;","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport NavigationBar from \"./components/navigationbar\";\nimport HomePage from \"./Sections/Homepage\";\nimport ButtonTrigger from \"./components/ButtonTrigger\";\nimport Test from \"./components/test\";\nimport React from \"react\";\nimport ScrollCircle from \"./components/ScrollCircle\";\n\n\n//add import statements above this - it doesn't autocorrect below for SOME WEIRD REASON!!!!!!\nimport CurrentProjects from \"./Sections/CurrentProjects\";\nimport GuessingGame from \"./Sections/GuessingGame\";\n\n//bruh\n\nwindow.onbeforeunload = function () { //IMPORTANT - ON REFRESH IT MOVES THE PAGE TO THE TOP\n  window.scrollTo(0, 0);\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.smallScroll = this.smallScroll.bind(this);\n    this.state = { yPos: 0, scrollLock:true, scrollPos:0 };\n  }\n\n  authenticate(){ //used for loading screen - loading screen makes it seem cooler lol\n    return new Promise(resolve => setTimeout(resolve, 2000)) // 1 seconds\n  }\n\n  handleResize(){\n    console.log('resized to: ', window.innerWidth, 'x', window.innerHeight);\n  }\n\n  componentDidMount() {\n    //Delete loading page\n\n    this.authenticate().then(() => {\n      const ele = document.getElementById('loading-screen');\n      if(ele){\n        ele.outerHTML='';\n      }\n    });\n\n    window.addEventListener(\"scroll\", this.handleScroll);\n    document.addEventListener(\"wheel\", this.smallScroll);\n\n    // window.addEventListener('resize', this.handleResize) used if i want to load screen on resize\n    \n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n    document.addEventListener(\"wheel\", this.smallScroll);\n  }\n\n  smallScroll(event){\n    this.setState({scrollPos: event})\n    if (event.deltaY >10){\n      // console.log(\"scroll:)\")\n      this.setState({scrollLock:false});\n      // console.log(\"Scroll lock: \" + this.state.scrollLock)\n    }\n  }\n\n  handleScroll() {\n    this.setState({ yPos: window.scrollY });\n    // console.log(this.state.yPos);\n    // console.log(this.state.yPos);\n    // console.log(window.innerWidth);\n    // console.log(window.innerHeight);  \n      //use this to find the height of the screen showing it - use this for page calculations\n      //homepage is set to full height, so the innerheight.\n    \n      /*this doesn't update for some reason, but I can still use it and assume no updates*/\n      \n    \n  }\n\n  handleClick() {\n    console.log(\"hey\");\n  }\n  render() {\n    return (\n      <div style={{overflow:\"hidden\" /*this gets rid of navbar.. */}}> \n        <NavigationBar \n        height={this.state.yPos<300?this.state.yPos/4:75 +\"px\"}\n        display={(this.state.yPos<300 || window.innerWidth<600)?'none':'block'}\n        displayName={this.state.yPos<300?'none':'block'}\n        ></NavigationBar> {/*Set nav height to increase as it scrolls down*/}\n        <ScrollCircle></ScrollCircle>\n        <HomePage lockScroll= {this.state.scrollLock} onClick={this.handleClick}></HomePage>\n        <CurrentProjects></CurrentProjects>\n        <GuessingGame></GuessingGame>\n        \n        \n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}